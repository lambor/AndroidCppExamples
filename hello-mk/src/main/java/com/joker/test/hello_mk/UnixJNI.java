/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.joker.test.hello_mk;

public class UnixJNI {
  public final static native void counter_set(int jarg1);
  public final static native int counter_get();
  public final static native void inc_counter();
  public final static native int MAX_WIDTH_get();
  public final static native int MAX_HEIGHT_get();
  public final static native int readOnly_get();
  public final static native void readWrite_set(int jarg1);
  public final static native int readWrite_get();
  public final static native int ONE_get();
  public final static native int TWO_get();
  public final static native int THREE_get();
  public final static native int FOUR_get();
  public final static native int ONE_SAFE_get();
  public final static native int TWO_SAFE_get();
  public final static native int ONE_UNSAFE_get();
  public final static native int TWO_UNSAFE_get();
  public final static native int THREE_UNSAFE_get();
  public final static native int FOUR_UNSAFE_get();
  public final static native int ONE_JAVA_get();
  public final static native int TWO_JAVA_get();
  public final static native void Point_x_set(long jarg1, Point jarg1_, int jarg2);
  public final static native int Point_x_get(long jarg1, Point jarg1_);
  public final static native void Point_y_set(long jarg1, Point jarg1_, int jarg2);
  public final static native int Point_y_get(long jarg1, Point jarg1_);
  public final static native long new_Point();
  public final static native void delete_Point(long jarg1);
  public final static native void drawByPointer(long jarg1, Point jarg1_);
  public final static native void drawByReference(long jarg1, Point jarg1_);
  public final static native void drawByValue(long jarg1, Point jarg1_);
  public final static native void func__SWIG_0(int jarg1, int jarg2, int jarg3);
  public final static native void func__SWIG_1(int jarg1, int jarg2);
  public final static native void func__SWIG_2(double jarg1);
  public final static native void func__SWIG_3(int jarg1);
  public final static native long new_A__SWIG_0();
  public final static native long new_A__SWIG_1(int jarg1);
  public final static native void delete_A(long jarg1);
  public final static native void A_print(long jarg1, A jarg1_);
  public final static native void A_value_set(long jarg1, A jarg1_, int jarg2);
  public final static native int A_value_get(long jarg1, A jarg1_);
  public final static native long getuid();
  public final static native long new_AsyncUidProvider();
  public final static native void delete_AsyncUidProvider(long jarg1);
  public final static native void AsyncUidProvider_get(long jarg1, AsyncUidProvider jarg1_);
  public final static native void AsyncUidProvider_onUid(long jarg1, AsyncUidProvider jarg1_, long jarg2);
  public final static native void AsyncUidProvider_director_connect(AsyncUidProvider obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void AsyncUidProvider_change_ownership(AsyncUidProvider obj, long cptr, boolean take_or_release);

  static {
    try {
        System.loadLibrary("hellomk");
    } catch (UnsatisfiedLinkError e) {
      System.err.println("Native code library failed to load. \n" + e);
      System.exit(1);
    }
  }


  public static void SwigDirector_AsyncUidProvider_onUid(AsyncUidProvider jself, long uid) {
    jself.onUid(uid);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
